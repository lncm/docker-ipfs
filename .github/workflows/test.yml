name: Build & test on any push

on:
  - push
  - pull_request

jobs:
  build:
    name: Build IPFS
    runs-on: ubuntu-18.04

    env:
      DOCKER_BUILDKIT: 1

    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
          - arm32v6
          - arm32v7

        flavor:
          - fuse
          - nofuse

    steps:
      - uses: actions/checkout@v1.0.0

      - name: Setup environment
        run: |
          if [[ "${{matrix.arch}}" == "amd64" ]]; then
            echo ::set-env name=TEST_LEVEL::"advanced"
            exit 0
          fi

          GOARCH="$(echo "${{matrix.arch}}" | grep -oE 'arm(64)?')"
          echo ::set-env name=GOARCH::"${GOARCH}"

          GOARM="$(echo "${{matrix.arch}}" | grep arm32 | tail -c 2)"
          echo ::set-env name=GOARM::"${GOARM}"

          ARCH="${{matrix.arch}}"
          if [[ "${{matrix.arch}}" == "arm64" ]]; then
            ARCH="arm64v8"
          fi
          echo ::set-env name=ARCH::"${ARCH}"

          echo ::set-env name=TEST_LEVEL::"none"

      - name: Build IPFS (${{matrix.flavor}})
        run: >
          docker build .
          --build-arg "ARCH=${ARCH}"
          --build-arg "GOARCH=${GOARCH}"
          --build-arg "GOARM=${GOARM}"
          --build-arg "TEST_LEVEL=${TEST_LEVEL}"
          --build-arg "FLAVOR=${{matrix.flavor}}"
          --target    "final-${{matrix.flavor}}"
          --tag       "ipfs:${{matrix.flavor}}-${{matrix.arch}}"

      - name: Show built image details
        run: docker images ipfs

      - name: Save image to a .tgz file
        run: |
          mkdir -p image/
          docker save "ipfs:${{matrix.arch}}" | gzip > "image/ipfs-${{matrix.arch}}.tgz"

      - name: Print sha256sum of produced Docker image
        run: sha256sum "image/ipfs-${{matrix.arch}}.tgz"

      - name: Add Docker image as build artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: docker-images
          path: image/

      - name: Extract binary from the built image
        run: |
          mkdir -p binary/
          ID=$(docker create "ipfs:${{matrix.arch}}")
          docker cp  "${ID}:/usr/local/bin/ipfs"  binary/
          docker rm  "${ID}"
          gzip -S "-${{matrix.arch}}.gz" binary/ipfs

      - name: Print sha256sum of extracted binary
        run: sha256sum binary/*

      - name: Add raw binary as build artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: binaries
          path: binary/
