name: Build & test on any push

env:
  APP: ipfs

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  build:
    name: Build IPFS
    runs-on: ubuntu-18.04

    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm32v6
          - arm32v7
          - arm64v8

        flavor:
          - fuse
          - nofuse

    env:
      QEMU_VERSION: v4.2.0
      DOCKER_BUILDKIT: 1
      FLAV_ARCH: "${{ matrix.flavor }}-${{ matrix.arch }}"

    steps:
      - uses: actions/checkout@v2

      # GOARCH => arm|arm64
      # GOARM  => 6|7
      - name: Setup Go environment
        if: matrix.arch != 'amd64'
        env:
          ARCH: ${{ matrix.arch }}
        run: |
          GOARCH="${ARCH%32v?}"
          echo ::set-env name=GOARCH::"${GOARCH%v8}"
          echo ::set-env name=GOARM::"$(echo "$ARCH" | sed -En 's|^arm32v([6-7])$|\1|p')"

      - name: Register self-compiled qemu
        if: matrix.arch != 'amd64'
        env:
          ARCH: ${{ matrix.arch }}
        run: docker run --rm --privileged "meedamian/simple-qemu:$QEMU_VERSION-${ARCH%32v6}" -p yes

      - name: Build & test IPFS (same CPU)
        if: matrix.arch == 'amd64'
        run: >
          docker build --no-cache .
          --build-arg "TEST_LEVEL=advanced"
          --build-arg "FLAVOR=${{ matrix.flavor }}"
          --tag       "$APP:$FLAV_ARCH"

      # NOTE: `--target="final-*"` used here due to usage of `ONBUILD` tags
      - name: Build IPFS (cross-compile)
        if: matrix.arch != 'amd64'
        run: >
          docker build --no-cache .
          --build-arg "TEST_LEVEL=none"
          --build-arg "ARCH=${{ matrix.arch }}"
          --build-arg "GOARCH=$GOARCH"
          --build-arg "GOARM=$GOARM"
          --target    "final-${{ matrix.flavor }}"
          --tag       "$APP:$FLAV_ARCH"

      - name: Show built image details
        run: docker images "$APP"
